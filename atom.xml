<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CuZaoo的程序文档</title>
  
  <subtitle>一个啥活都参与的程序员</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-02-26T15:42:29.921Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>CuZaoo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[JS]讨论null和undefined的区分和使用场景</title>
    <link href="http://example.com/2025/02/26/JS-%E8%AE%A8%E8%AE%BAnull%E5%92%8Cundefined%E7%9A%84%E5%8C%BA%E5%88%86%E5%92%8C%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    <id>http://example.com/2025/02/26/JS-%E8%AE%A8%E8%AE%BAnull%E5%92%8Cundefined%E7%9A%84%E5%8C%BA%E5%88%86%E5%92%8C%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/</id>
    <published>2025-02-26T14:49:03.000Z</published>
    <updated>2025-02-26T15:42:29.921Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript-中-null-和-undefined-的区别及使用场景"><a href="#JavaScript-中-null-和-undefined-的区别及使用场景" class="headerlink" title="JavaScript 中 null 和 undefined 的区别及使用场景"></a>JavaScript 中 <code>null</code> 和 <code>undefined</code> 的区别及使用场景</h1><h2 id="1-为什么存在-null-和-undefined"><a href="#1-为什么存在-null-和-undefined" class="headerlink" title="1. 为什么存在 null 和 undefined"></a>1. 为什么存在 <code>null</code> 和 <code>undefined</code></h2><p>在 JavaScript 中，<code>null</code> 和 <code>undefined</code> 是为了表示两种不同概念：</p><ul><li><strong><code>undefined</code></strong>：表示变量已声明，但尚未赋值。</li><li><strong><code>null</code></strong>：表示变量已赋值，但特意赋为 “空值”。</li></ul><hr><h2 id="2-区别详解"><a href="#2-区别详解" class="headerlink" title="2. 区别详解"></a>2. 区别详解</h2><h3 id="1-语义"><a href="#1-语义" class="headerlink" title="(1) 语义"></a><strong>(1) 语义</strong></h3><ul><li><strong><code>undefined</code></strong>：表示变量已声明，但尚未初始化。</li><li><strong><code>null</code></strong>：表示变量有意被赋值为空，通常用于表示对象引用的“空状态”。</li></ul><hr><h3 id="2-类型"><a href="#2-类型" class="headerlink" title="(2) 类型"></a><strong>(2) 类型</strong></h3><ul><li><code>undefined</code> 是原始值，属于 <strong>undefined 类型</strong>。</li><li><code>null</code> 是原始值，属于 <strong>object 类型</strong>（这是一个历史遗留问题）。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">undefined</span>); <span class="comment">// &quot;undefined&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="literal">null</span>);      <span class="comment">// &quot;object&quot;</span></span><br></pre></td></tr></table></figure><hr><h3 id="3-比较"><a href="#3-比较" class="headerlink" title="(3) 比较"></a><strong>(3) 比较</strong></h3><ul><li><code>松散比较 ==</code>:<code>null==undefined</code>为<code>true</code>,这是一个强制规定</li><li><code>严格比较 ===</code>: <code>null==undefined</code>为<code>false</code>,因为类型不同</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">null</span> == <span class="literal">undefined</span>);  <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">null</span> === <span class="literal">undefined</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure><hr><h2 id="3-使用场景"><a href="#3-使用场景" class="headerlink" title="3. 使用场景"></a>3. 使用场景</h2><h3 id="1-使用-undefined"><a href="#1-使用-undefined" class="headerlink" title="(1) 使用 undefined"></a>(1) 使用 <code>undefined</code></h3><ul><li><code>undefined</code> 通常由 JavaScript 自动分配，不需要显式赋值：<ul><li>表示变量 “未被赋值”。</li><li>表示对象属性不存在。</li><li>表示函数参数未传递。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 变量未赋值</span></span><br><span class="line"><span class="keyword">let</span> a;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 输出 undefined</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象属性不存在</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">value</span>); <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数参数未传递</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">test</span>(<span class="params">param</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(param); <span class="comment">// undefined</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">test</span>();</span><br></pre></td></tr></table></figure><h3 id="2-使用-null"><a href="#2-使用-null" class="headerlink" title="(2) 使用 null"></a>(2) 使用 <code>null</code></h3><ul><li><code>null</code> 需要开发者主动赋值，用于表示 “空值” 或 “空对象”：<ul><li>初始化一个变量，表示未来会赋值。</li><li>表示资源尚未分配或不需要时显式清空。</li></ul></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化为空值</span></span><br><span class="line"><span class="keyword">let</span> data = <span class="literal">null</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data); <span class="comment">// null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 一开始未初始化对象</span></span><br><span class="line"><span class="keyword">let</span> person = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">isDataReady</span>()) &#123;</span><br><span class="line">    person = &#123;<span class="attr">name</span>: <span class="string">&quot;John&quot;</span>&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="4-默认值为-undefined"><a href="#4-默认值为-undefined" class="headerlink" title="4. 默认值为 undefined"></a>4. 默认值为 undefined</h2><p>如果声明了变量但没有赋值，它的默认值为 undefined：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaScript-中-null-和-undefined-的区别及使用场景&quot;&gt;&lt;a href=&quot;#JavaScript-中-null-和-undefined-的区别及使用场景&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 中 nul</summary>
      
    
    
    
    
  </entry>
  
</feed>
